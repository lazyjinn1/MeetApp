{"ast":null,"code":"/* eslint-disable no-useless-concat */import mockData from'./mock-data';/**\r\n@param {*} events:\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n */export const extractLocations=events=>{const extractedLocations=events.map(event=>event.location);const locations=[...new Set(extractedLocations)];return locations;};const checkToken=async accessToken=>{const response=await fetch(\"https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=\".concat(accessToken));const result=await response.json();return result;};const removeQuery=()=>{let newurl;if(window.history.pushState&&window.location.pathname){newurl=window.location.protocol+\"//\"+window.location.host+window.location.pathname;window.history.pushState(\"\",\"\",newurl);}else{newurl=window.location.protocol+\"//\"+window.location.host;window.history.pushState(\"\",\"\",newurl);}};const getToken=async code=>{const encodeCode=encodeURIComponent(code);const response=await fetch('https://00micfpd0a.execute-api.us-west-1.amazonaws.com/dev/api/token'+'/'+encodeCode);const{access_token}=await response.json();access_token&&localStorage.setItem(\"access_token\",access_token);return access_token;};/*This function will fetch the list of all events*/export const getEvents=async()=>{if(window.location.href.startsWith('http://localhost')){return mockData;}const token=await getAccessToken();if(token){removeQuery();const url=\"https://00micfpd0a.execute-api.us-west-1.amazonaws.com/dev/api/get-events\"+\"/\"+token;const response=await fetch(url);const result=await response.json();if(result){return result.events;}else return null;}};export const getAccessToken=async()=>{const accessToken=localStorage.getItem('access_token');const tokenCheck=accessToken&&(await checkToken(accessToken));if(!accessToken||tokenCheck.error){await localStorage.removeItem(\"access_token\");const searchParams=new URLSearchParams(window.location.search);const code=await searchParams.get(\"code\");if(!code){const response=await fetch(\"https://00micfpd0a.execute-api.us-west-1.amazonaws.com/dev/api/get-auth-url\");const result=await response.json();const{authUrl}=result;return window.location.href=authUrl;}return code&&getToken(code);}return accessToken;};","map":{"version":3,"names":["mockData","extractLocations","events","extractedLocations","map","event","location","locations","Set","checkToken","accessToken","response","fetch","concat","result","json","removeQuery","newurl","window","history","pushState","pathname","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getEvents","href","startsWith","token","getAccessToken","url","getItem","tokenCheck","error","removeItem","searchParams","URLSearchParams","search","get","authUrl"],"sources":["C:/Users/carre/OneDrive/Documents/GitHub/meetapp/src/api.js"],"sourcesContent":["/* eslint-disable no-useless-concat */\r\nimport mockData from './mock-data';\r\n\r\n/**\r\n@param {*} events:\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n */\r\nexport const extractLocations = (events) => {\r\n  const extractedLocations = events.map((event) => event.location);\r\n  const locations = [...new Set(extractedLocations)];\r\n  return locations;\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n  const response = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  );\r\n  const result = await response.json();\r\n  return result;\r\n};\r\n\r\nconst removeQuery = () => {\r\n  let newurl;\r\n  if (window.history.pushState && window.location.pathname) {\r\n    newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const response = await fetch(\r\n    'https://00micfpd0a.execute-api.us-west-1.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n  );\r\n  const { access_token } = await response.json();\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\n\r\n\r\n/*This function will fetch the list of all events*/\r\nexport const getEvents = async () => {\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    return mockData;\r\n  }\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url =  \"https://00micfpd0a.execute-api.us-west-1.amazonaws.com/dev/api/get-events\" + \"/\" + token;\r\n    const response = await fetch(url);\r\n    const result = await response.json();\r\n    if (result) {\r\n      return result.events;\r\n    } else return null; \r\n  }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n    if (!code) {\r\n      const response = await fetch(\r\n        \"https://00micfpd0a.execute-api.us-west-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const result = await response.json();\r\n      const { authUrl } = result;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}